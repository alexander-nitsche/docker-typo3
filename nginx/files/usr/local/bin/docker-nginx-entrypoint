#!/bin/sh
set -eo pipefail

docker_resolve_env() {
    local config_dir="/etc/nginx"
    local config_dir_exclude="/etc/nginx/conf-available.d"
    local suffix=".conf"
    local config

    local DOCKER_GATEWAY=$(docker_resolve_network_gateway)

    # Nginx: Context sensitive configuration
    if [ "${NGINX_CONTEXT}" != "dev" ] && [ "${NGINX_CONTEXT}" != "test" ] && [ "${NGINX_CONTEXT}" != "prod" ]; then
        echo "Environment variable NGINX_CONTEXT has invalid value '${NGINX_CONTEXT}'. Reset to 'prod'."
        export NGINX_CONTEXT="prod"
    fi
    cp "$config_dir/conf-available.d/nginx-${NGINX_CONTEXT}.conf" "$config_dir/nginx.conf"
    cp "$config_dir/conf-available.d/default-${NGINX_CONTEXT}.conf" "$config_dir/conf.d/default.conf"

    # Nginx: Variable substitutions in configuration
    find "$config_dir" -path "$config_dir_exclude" -prune -o -follow -type f -name "*$suffix" -print | while read -r config_file; do
        config=$(cat "$config_file")
        if [[ -n "${NGINX_LOGLEVEL}" ]]; then
            config=$(echo "$config" | sed -e "/error_log/s/[a-z]\+;$/${NGINX_LOGLEVEL};/g")
        fi
        if [[ -n "${DOCKER_GATEWAY}" ]]; then
            config=$(echo "$config" | sed -e "s/127\.0\.0\.1;$/${DOCKER_GATEWAY};/g")
        fi
        echo "$config" > "$config_file"
    done
}

docker_resolve_network_gateway() {
    local gateway=$(ip route | sed -n -e "s/^default via \(\S*\).*$/\1/p")
    echo "${gateway}"
}

docker_resolve_env

exec "$@"
