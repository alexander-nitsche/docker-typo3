version: '3'
services:

  nginx-test:
    image: ${PROJECTNAME}/nginx
    depends_on:
      - php-test
    ports:
      - "80:80"
    volumes:
      - ./typo3:/var/www/html
    environment:
      - NGINX_CONTEXT=test
      # Available levels: debug, info, notice, warn, error, crit, alert, emerg
      # @see https://nginx.org/en/docs/ngx_core_module.html#error_log
      # - NGINX_LOGLEVEL=debug
    networks:
      - test
    # Commandline below is required for Nginx log level "debug"
    # command: [ "nginx-debug", "-g", "daemon off;" ]

  php-test:
    image: ${PROJECTNAME}/php
    volumes:
      - ./typo3:/var/www/html
    environment:
      PHP_CONTEXT: test
      # Available levels: alert, error, warning, notice, debug
      # @see https://www.php.net/manual/en/install.fpm.configuration.php
      # PHP_LOGLEVEL: debug
      typo3DatabaseHost: mariadb-test
      typo3DatabaseUsername: root
      typo3DatabasePassword: geheim
      typo3DatabaseName: typo3_test
    networks:
      - test

  mariadb-test:
    image: ${PROJECTNAME}/mariadb
    volumes:
      - db-test:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: geheim
    command: [ "mysqld", "--character-set-server", "utf8mb4", "--collation-server", "utf8mb4_unicode_ci" ]
    networks:
      - test

  chrome:
    image: selenium/standalone-chrome:3.12
    networks:
      - test

  run-typo3-unit-tests:
    image: ${PROJECTNAME}/php
    volumes:
      - ./typo3:/var/www/html
    environment:
      PHP_CONTEXT: test
      SCRIPT_VERBOSE: 0
      PHPUNIT_FLAGS: ""
    command: >
      /bin/sh -c '
        [ "$${SCRIPT_VERBOSE}" -eq "1" ] && set -x;
        [ ! -d "public" ] && echo "TYPO3 missing. Please install it." && exit;
        cd public;
        php -d memory_limit=768M vendor/phpunit/phpunit/phpunit -c vendor/typo3/testing-framework/Resources/Core/Build/UnitTests.xml $${PHPUNIT_FLAGS};
      '
    networks:
      - test

  run-typo3-functional-tests:
    image: ${PROJECTNAME}/php
    depends_on:
      - mariadb-test
    volumes:
      - ./typo3:/var/www/html
    environment:
      typo3DatabaseHost: mariadb-test
      typo3DatabaseUsername: root
      typo3DatabasePassword: geheim
      typo3DatabaseName: typo3_test
      # Set fake HTTP_HOST as DBAL + MariaDB 10.4 throws an exception (MariaDB 10.3 works fine though),
      # if HTTP_HOST is null in the backend user authentication
      # @see typo3/typo3/sysext/core/Classes/Authentication/BackendUserAuthentication.php::fetchGroups()
      HTTP_HOST: localhost
      PHP_CONTEXT: test
      SCRIPT_VERBOSE: 0
      PHPUNIT_FLAGS: ""
    command: >
      /bin/sh -c '
        [ "$${SCRIPT_VERBOSE}" -eq "1" ] && set -x;
        [ ! -d "public" ] && echo "TYPO3 missing. Please install it." && exit;
        echo Waiting for database start...;
        while ! nc -z mariadb-test 3306; do
          sleep 1;
        done;
        echo Database is up;
        cd public;
        php -d memory_limit=4048M vendor/phpunit/phpunit/phpunit -c vendor/typo3/testing-framework/Resources/Core/Build/FunctionalTests.xml $${PHPUNIT_FLAGS};
      '
    networks:
      - test

  run-typo3-acceptance-tests:
    image: ${PROJECTNAME}/php
    depends_on:
      - nginx-test
      - mariadb-test
      - chrome
    volumes:
      - ./typo3:/var/www/html
    environment:
      typo3DatabaseHost: mariadb-test
      typo3DatabaseUsername: root
      typo3DatabasePassword: geheim
      typo3DatabaseName: typo3_test
      typo3TestingAcceptanceBaseUrl: http://nginx-test:80
      PHP_CONTEXT: test
      SCRIPT_VERBOSE: 0
      CODECEPT_FLAGS: "-c typo3/sysext/core/Tests/codeception.yml -- Backend"
    command: >
      /bin/sh -c '
        [ "$${SCRIPT_VERBOSE}" -eq "1" ] && set -x;
        [ ! -d "public" ] && echo "TYPO3 missing. Please install it." && exit;
        echo Waiting for nginx start...;
        while ! nc -z nginx-test 80; do
          sleep 1;
        done;
        echo Nginx is up;
        echo Waiting for database start...;
        while ! nc -z mariadb-test 3306; do
          sleep 1;
        done;
        echo Database is up;
        cd public;
        ./bin/codecept run -d --html reports.html $${CODECEPT_FLAGS};
      '
    networks:
      - test

volumes:
  db-test:

networks:
  test:
